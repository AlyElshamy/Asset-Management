@page
@model AssetProject.Areas.Admin.Pages.AlertsManagement.CheckOutExpiringModel
@{
}

@(Html.DevExtreme().DataGrid<AssetProject.Models.AssetMovementDetails>()
    .DataSource(ds => ds.Mvc()
        .Controller("Alerts")
        .LoadAction("GetExpiringCheckOut")
        .Key("AssetMovementDetailsId")
    )
    .RemoteOperations(true)
    .Columns(columns => {

         columns.AddFor(m => m.Asset.Photo).Caption(sharedResource["Photo"]).Width(100)
                    .AllowFiltering(false)
                    .AllowSorting(false)
                    .CellTemplate(@<text>
                            <div>
                                <img src="/<%- value %>" alt="" width="35" height="35" />
                            </div>
                        </text>);
        columns.AddFor(m => m.AssetMovementDetailsId);
        columns.AddFor(m => m.Asset.AssetStatus.AssetStatusTitle);
        columns.AddFor(m => m.Asset.AssetSerialNo);
        columns.AddFor(m => m.Asset.AssetCost);

        columns.AddFor(m => m.Asset.AssetStatusId).Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Lookups").LoadAction("AssetStatusesLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
        );
        columns.AddFor(m => m.Asset.ItemId).Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Lookups").LoadAction("ItemsLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
        );


        columns.AddFor(m => m.Remarks);
        columns.AddFor(m => m.AssetMovement.DueDate);
    })
)
