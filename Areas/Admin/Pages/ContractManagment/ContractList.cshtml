@page
@model AssetProject.Areas.Admin.Pages.ContractManagment.ContractListModel
@{
}
<div class="slim-mainpanel">
    <div class="container">
        <div class="slim-pageheader">
            <ol class="breadcrumb slim-breadcrumb">
                <li class="breadcrumb-item"><a href="#">Home</a></li>
                <li class="breadcrumb-item"><a href="#">Set Up</a></li>
                <li class="breadcrumb-item active" aria-current="page">Contract List</li>
            </ol>
            <h6 class="slim-pagetitle">Contract List</h6>
        </div><!-- slim-pageheader -->

        <div class="section-wrapper">
            <label class="section-title d-inline">Contract List</label>
             <a asp-area="Admin" asp-page="/ContractManagment/AddContract" class="btn btn-primary" style="float:right"> Add New Contract   </a>
            <p class="mg-b-20 mg-sm-b-40">Searching, ordering and paging goodness will be immediately added to the table, as shown in this example.</p>

            <div class="table-wrapper">
                <div id="datatable1_wrapper" class="dataTables_wrapper no-footer">
                   
                    @(Html.DevExtreme().DataGrid<AssetProject.Models.Contract>()
                    .DataSource(ds => ds.Mvc()
                    .Controller("Contracts")
                    .LoadAction("Get")
                    .Key("ContractId")
                    )
                    .RemoteOperations(true)
                    .ShowBorders(true)
                    .Paging(p=>p.PageSize(10))
                    .Pager(p=>p.ShowPageSizeSelector(true).AllowedPageSizes(new [] {10,20,40,80}))
                    .SearchPanel(s=>s.Visible(true).HighlightCaseSensitive(true))
                    .FilterRow(filterRow => filterRow
                    .Visible(true)
                    .ApplyFilter(GridApplyFilterMode.Auto)
                    )
                    .HeaderFilter(headerFilter => headerFilter.Visible(true))
                    .Columns(columns => {

                    columns.Add().Caption("Actions").Alignment(HorizontalAlignment.Center).CellTemplate(@<text>
                            <a href="/Admin/ContractManagment/EditContract?id=<%- data.ContractId %>"> Edit |  </a>
                            <a href="/Admin/ContractManagment/DeleteContract?id=<%- data.ContractId %>"> Delete | </a>
                            <a href="/Admin/ContractManagment/DetailsContract?id=<%- data.ContractId %>"> Details </a>
                        </text>).Width(150);
                    })

                    .Columns(columns => {

                    columns.AddFor(m => m.ContractId);

                    columns.AddFor(m => m.Title);

                    columns.AddFor(m => m.Description);

                    columns.AddFor(m => m.ContractNo);

                    columns.AddFor(m => m.Cost);

                    columns.AddFor(m => m.StartDate);

                    columns.AddFor(m => m.EndDate);

                    columns.AddFor(m => m.VendorId).Caption("Vendor").Lookup(lookup => lookup
                    .DataSource(ds => ds.WebApi().Controller("Lookups").LoadAction("VendorsLookup").Key("Value"))
                    .ValueExpr("Value")
                    .DisplayExpr("Text")
                    );
                    })
                    )

                </div>
            </div><!-- table-wrapper -->
        </div><!-- section-wrapper -->

    </div><!-- container -->
</div>