@page
@model AssetProject.Areas.Admin.Pages.AssetManagment.AssetListModel
@{
}

<div class="slim-mainpanel">
    <div class="container">
        <div class="slim-pageheader">
            <ol class="breadcrumb slim-breadcrumb">
                <li class="breadcrumb-item"><a href="#">Home</a></li>
                <li class="breadcrumb-item"><a href="#">Assets</a></li>
                <li class="breadcrumb-item active" aria-current="page">Assets List</li>
            </ol>
            <h6 class="slim-pagetitle">Assets List</h6>
        </div><!-- slim-pageheader -->
        <div class="section-wrapper">
            <label class="section-title d-inline">Assets List</label>
            <a asp-area="Admin" asp-page="/AssetManagment/AddAsset" class="btn btn-primary" style="float:right"> Add New Contract   </a>
            <p class="mg-b-20 mg-sm-b-40">Searching, ordering and paging goodness will be immediately added to the table, as shown in this example.</p>
            <div class="table-wrapper">
                <div id="datatable1_wrapper" class="dataTables_wrapper no-footer">
                    @(Html.DevExtreme().DataGrid<AssetProject.Models.Asset>()
                    .ID("gridContainer")
                    .DataSource(ds => ds.Mvc()
                     .Controller("Assets")
                     .LoadAction("Get")
                    .InsertAction("Post")
                    .UpdateAction("Put")
                   .DeleteAction("Delete")
                    .Key("AssetId")
                    )
                    .HeaderFilter(headerFilter => headerFilter.Visible(true))
                    .Selection(s => s
                    .Mode(SelectionMode.Multiple)
                    )
                    .ColumnChooser(cc => cc.Enabled(true))
                    .ColumnAutoWidth(true)
                    .WordWrapEnabled(true)
                     .ShowBorders(true)
    .Paging(p=>p.PageSize(10))
    .Pager(p=>p.ShowPageSizeSelector(true).AllowedPageSizes(new [] {10,20,40,80}))
    .SearchPanel(s=>s.Visible(true).HighlightCaseSensitive(true))
    .FilterRow(filterRow => filterRow
        .Visible(true)
        .ApplyFilter(GridApplyFilterMode.Auto)
    )
      .HeaderFilter(headerFilter => headerFilter.Visible(true))
                    .Columns(columns => {

                    columns.Add().Caption("Action").Alignment(HorizontalAlignment.Center).CellTemplate(@<text>
                            <a href="/Admin/AssetManagment/AssetDetails?id=<%- data.AssetId %>"> View </a>
                        </text>).Width(150);
                    })
                    .Columns(columns => {


                    columns.AddFor(m => m.Photo).Width(100)
                    .AllowFiltering(false)
                    .AllowSorting(false)
                    .CellTemplate(@<text>
                            <div>
                                <img src="<%- value %>" alt="" width="35" height="35" />
                            </div>
                        </text>);
                    columns.AddFor(m => m.AssetDescription);

                    columns.AddFor(m => m.AssetTagId);

                    columns.AddFor(m => m.AssetCost);

                    columns.AddFor(m => m.AssetSerialNo);

                    columns.AddFor(m => m.AssetPurchaseDate);

                    columns.AddFor(m => m.ItemId).Caption("Item").Lookup(lookup => lookup
                    .DataSource(ds => ds.WebApi().Controller("Assets").LoadAction("ItemsLookup").Key("Value"))
                    .ValueExpr("Value")
                    .DisplayExpr("Text")
                    );



                    //columns.AddFor(m => m.DepreciableAsset);

                    //columns.AddFor(m => m.DepreciableCost);

                    //columns.AddFor(m => m.SalvageValue);

                    //columns.AddFor(m => m.AssetLife);

                    //columns.AddFor(m => m.DateAcquired);

                    //columns.AddFor(m => m.DepreciationMethodId).Lookup(lookup => lookup
                    //    .DataSource(ds => ds.WebApi().Controller("Assets").LoadAction("DepreciationMethodsLookup").Key("Value"))
                    //    .ValueExpr("Value")
                    //    .DisplayExpr("Text")
                    //);

                    })
                    .RemoteOperations(true).Columns(columns =>
                    {
                    columns.Add().Width(160).Alignment(HorizontalAlignment.Center)
                    .CellTemplate(@<text>
                            @Html.DevExtreme().Button().Text("Edit").OnClick("function (e) { editButtonClick(data) }")
                            @Html.DevExtreme().Button().Text("Delete").OnClick("function (e) { deleteButtonClick(data) }")
                            @Html.DevExtreme().Button().Text("View").OnClick("function (e) { viewButtonClick(data) }")
                        </text>);

                    })

                    )


                    @(Html.DevExtreme().Popup().ID("customPopup").Title("Custom popup edit").Height(500).Visible(false)
                    .ContentTemplate(@<text>
                         <div class="row mg-b-25">
                             <div class="col-lg-4">
                                 <div class="form-group">
                         @Html.Label("Asset Description")
                            @Html.DevExtreme().TextBox().ID("TxtAssetDescription")
                            </div>
                            </div>
                            <br>
                        <div class="col-lg-4">
                                 <div class="form-group">
                            @Html.Label("Asset Tag Id")
                            @Html.DevExtreme().TextBox().ID("TxtAssetTagId")
                            </div>
                            </div>
                            <br>
                              <div class="col-lg-4">
                                 <div class="form-group">
                           @Html.Label("Asset Cost ")
                            @Html.DevExtreme().TextBox().ID("TxtAssetCost")
                            </div>
                            </div>
                            <br>
                    
                              <div class="col-lg-4">
                                 <div class="form-group">
                           @Html.Label("Asset Serial No")
                            @Html.DevExtreme().TextBox().ID("TxtAssetSerialNo")
                            </div>
                            </div>
                            <br>
                    
                              <div class="col-lg-4">
                                 <div class="form-group">
                                 @Html.Label("AssetPurchaseDate")
                            @Html.DevExtreme().DateBox().ID("AssetPurchaseDate")
                            </div>
                            </div>
                            <br>
                 
                                     <div class="col-lg-4">
                                 <div class="form-group">
                                 @Html.Label("Item")
                                  @(Html.DevExtreme().Lookup()
                             .ID("TxtAssetItem")
            .DataSource(d => d.WebApi()
                .Controller("Lookups")
                .LoadAction("ItemsLookup")
                .Key("Value")
            )
            .ValueExpr("Value")
            .DisplayExpr("Text")
        )
                            </div>
                            </div>
                            <br>

                               <div class="col-lg-4">
                          <div class="form-group">
                              @Html.Label("Asset Photo")
                              <div class="custom-file">
                                  <input type="file" name="file" accept=".png, .jpg, .jpeg" class="custom-file-input" id="Photo" required>
                                  <label class="custom-file-label" for="File">Choose New Photo</label>
                              </div>
                          </div>
                      </div>
  @*       <div class="col-lg-4">
                                 <div class="form-group">
                                @Html.Label("Asset Photo")
      @Html.DevExtreme().FileUploader().ID("Photo")
                            </div>
                            </div>
                            <br>*@

</div>
      @Html.DevExtreme().Button().Text("Save").OnClick("function (e) { saveButtonClick() }")
      @Html.DevExtreme().Button().Text("Cancel").OnClick("function (e) { cancelButtonClick() }")

                        </text>))

                          @(Html.DevExtreme().Popup().ID("viewPopup").Title("Custom popup View").Visible(false)
                    .ContentTemplate(@<text>
                        <div class="row mg-b-25">

                    <div class="col-lg-4">
                        <img src="" width="250" height="250" id="img" />
                    </div><!-- col-4 -->
                      <div class="col-lg-4">
                          <table class="table table-bordered table-hover table-striped">
                            <tr>
                                <td>
                                    Asset Tag Id
                                </td>
                                <td id="TxtAssetTagId">
                                   
                                </td>
                            </tr>
                             <tr>
                                <td>
                                    Asset Tag Id
                                </td>
                                <td id="TxtAssetTagId">
                                   
                                </td>
                            </tr>
                            </table>
                          
                                </div>
                            </div>
                            @Html.Label("Asset Description")
                            @Html.DevExtreme().TextBox().ID("TxtAssetTagId")
                            @Html.DevExtreme().Button().Text("Save").OnClick("function (e) { saveButtonClick() }")
                            @Html.DevExtreme().Button().Text("Cancel").OnClick("function (e) { cancelButtonClick() }")
                        </text>))

                </div>
            </div><!-- table-wrapper -->
        </div><!-- section-wrapper -->

    </div><!-- container -->
</div>

<script>
     $("#Photo").on("change", function () {
         console.log("in photo")
                var fileName = $(this).val().split("\\").pop();
                    $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
            });

        var currentKey;
    function editButtonClick(data) {
        $('#customPopup').dxPopup('instance').option('visible', true);

        var AssetDescription = $('#TxtAssetDescription').dxTextBox('instance');
        AssetDescription.option('value', data.AssetDescription);

          var AssetTagId = $('#TxtAssetTagId').dxTextBox('instance');
        AssetTagId.option('value', data.AssetTagId);

          var AssetCost = $('#TxtAssetCost').dxTextBox('instance');
        AssetCost.option('value', data.AssetCost);

          var AssetSerialNo = $('#TxtAssetSerialNo').dxTextBox('instance');
       AssetSerialNo.option('value', data.AssetSerialNo);

          var AssetPurchaseDate = $('#AssetPurchaseDate').dxDateBox('instance');
        AssetPurchaseDate.option('value', data.AssetPurchaseDate);

          var AssetItem = $('#TxtAssetItem').dxLookup('instance');
        AssetItem.option('value', data.ItemId);

        currentKey = data.AssetId;
    }
    function deleteButtonClick(data) {
        var grid = $('#gridContainer').dxDataGrid('instance');
        var rowIndex = grid.getRowIndexByKey(data.AssetId);
        grid.deleteRow(rowIndex);
    }
  
       function saveButtonClick() {
        var grid = $('#gridContainer').dxDataGrid('instance');

        var AssetTagId = $('#TxtAssetTagId').dxTextBox('instance');
        var AssetTagIdvalue = AssetTagId.option('value');
 
         var AssetDescription = $('#TxtAssetDescription').dxTextBox('instance');
        var AssetDescriptionvalue = AssetDescription.option('value');

          var AssetCost = $('#TxtAssetCost').dxTextBox('instance');
        var AssetCostvalue = AssetCost.option('value');

          var AssetSerialNo = $('#TxtAssetSerialNo').dxTextBox('instance');
        var AssetSerialNovalue = AssetSerialNo.option('value');

          var AssetPurchaseDate = $('#AssetPurchaseDate').dxDateBox('instance');
         var AssetPurchaseDatevalue =AssetPurchaseDate.option('value');

          var AssetItem= $('#TxtAssetItem').dxLookup('instance');
        var TxtAssetItemvalue = AssetItem.option('value');

          var Photo =document.getElementById("Photo");
          var Photovalue = Photo.value.split("\\").pop();

        var rowIndex = grid.getRowIndexByKey(currentKey);
        grid.cellValue(rowIndex, "AssetTagId", AssetTagIdvalue);
         grid.cellValue(rowIndex, "AssetDescription", AssetDescriptionvalue);
          grid.cellValue(rowIndex, "AssetCost", AssetCostvalue);
           grid.cellValue(rowIndex, "AssetSerialNo", AssetSerialNovalue);
            grid.cellValue(rowIndex, "AssetPurchaseDate", AssetPurchaseDatevalue);
           grid.cellValue(rowIndex, "ItemId", TxtAssetItemvalue);
           console.log(Photovalue)
         grid.cellValue(rowIndex, "Photo",Photovalue);
     
        grid.saveEditData()
        $('#customPopup').dxPopup('instance').option('visible', false);
        currentKey = -1;
    }
    function cancelButtonClick() {
        $('#customPopup').dxPopup('instance').option('visible', false);
        currentKey = -1;
    }
    function viewButtonClick(data) {
     
        var pop=$('#viewPopup').dxPopup('instance');
    @*pop.show();*@
        pop.option('visible', true);
        var textBox = $('#TxtAssetTagId').dxTextBox('instance');
        textBox.option('value', data.AssetTagId);
        currentKey = data.AssetId;
    }

        

</script>

        @section Scripts {
            <partial name="_ValidationScriptsPartial" />
             <script type="text/javascript">

                // Add the following code if you want the name of the file appear on select
                $("#text").on("change", function () {
                var fileName = $(this).val().split("\\").pop();
                    $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
            });

            </script>
        }
