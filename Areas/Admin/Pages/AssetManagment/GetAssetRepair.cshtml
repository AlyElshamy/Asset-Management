@page
@model AssetProject.Areas.Admin.Pages.AssetManagment.GetAssetRepairModel
@{
}

<div class="slim-mainpanel">
    <div class="container">
         <div class="slim-pageheader">
            <ol class="breadcrumb slim-breadcrumb">
                <li class="breadcrumb-item"><a href="#">@sharedResource["Home"]</a></li>
                <li class="breadcrumb-item"><a href="#">Asset Managment</a></li>
                <li class="breadcrumb-item active" aria-current="page">Repaired Assets </li>
            </ol>
            <h6 class="slim-pagetitle">Repaired Assets</h6>
        </div><!-- slim-pageheader -->
        <div class="section-wrapper">
 
            <div class="table-wrapper">
                <div id="datatable1_wrapper" class="dataTables_wrapper no-footer">
   
               @(Html.DevExtreme().DataGrid<AssetProject.Models.AssetRepairDetails>()
    .DataSource(ds => ds.Mvc()
        .Controller("AssetRepairs")
        .LoadAction("Get")
        .UpdateAction("Put")
        .DeleteAction("Delete")
        .Key("AssetRepairId")
    )
    .RemoteOperations(true)
                    .ShowBorders(true)
                    .Paging(p=>p.PageSize(10))
                    .Pager(p=>p.ShowPageSizeSelector(true).AllowedPageSizes(new [] {10,20,40,80}))
                    .SearchPanel(s=>s.Visible(true).HighlightCaseSensitive(true))
                    .FilterRow(filterRow => filterRow
                    .Visible(true)
                    .ApplyFilter(GridApplyFilterMode.Auto)
                    )
                    .HeaderFilter(headerFilter => headerFilter.Visible(true))
    .Columns(columns => {

      @*  columns.AddFor(m => m.AssetRepairId);*@

        columns.AddFor(m => m.AssetRepair.ScheduleDate);

        columns.AddFor(m => m.AssetRepair.CompletedDate);

        columns.AddFor(m => m.AssetRepair.RepairCost);

        columns.AddFor(m => m.AssetRepair.Notes);

        columns.AddFor(m => m.AssetId).Caption("Asset").Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("AssetRepairs").LoadAction("AssetsLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
        );

        columns.AddFor(m => m.AssetRepair.TechnicianId).Caption("Technician").Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("AssetRepairs").LoadAction("TechniciansLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
        );
        columns.AddFor(m => m.Asset.Photo).Caption("Photo").Width(100)
                    .AllowFiltering(false)
                    .AllowSorting(false)
                    .CellTemplate(@<text>
                <div>
                    <img src="/<%- value %>" alt="" width="35" height="35" />
                </div>
            </text>);
                        columns.AddFor(m => m.Asset.AssetDescription).Caption("Description");

                        columns.AddFor(m => m.Asset.AssetTagId).Caption("TagId");

                        columns.AddFor(m => m.Asset.AssetCost).Caption("Cost");

                        columns.AddFor(m => m.Asset.AssetSerialNo).Caption("SerialNo");

                        columns.AddFor(m => m.Asset.AssetPurchaseDate).Caption("PurchaseDate");

                        columns.AddFor(m => m.Asset.ItemId).Caption("Item").Lookup(lookup => lookup
                        .DataSource(ds => ds.WebApi().Controller("Assets").LoadAction("ItemsLookup").Key("Value"))
                        .ValueExpr("Value")
                        .DisplayExpr("Text")
                        );


    })
    .Editing(e => e
        .AllowUpdating(true)
        .AllowDeleting(true)
    )
)
                </div>
            </div><!-- table-wrapper -->
        </div><!-- section-wrapper -->

    </div><!-- container -->
</div>