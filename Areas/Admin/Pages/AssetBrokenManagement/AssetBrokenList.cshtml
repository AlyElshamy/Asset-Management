@page
@model AssetProject.Areas.Admin.Pages.AssetBrokenManagement.AssetBrokenListModel
@{ }
<div class="slim-mainpanel">
    <div class="container">
        <<div class="slim-pageheader">
            <ol class="breadcrumb slim-breadcrumb">
                <li class="breadcrumb-item"><a href="#">@sharedResource["Home"]</a></li>
                <li class="breadcrumb-item"><a href="#">SETUP</a></li>
                <li class="breadcrumb-item active" aria-current="page">Asset Broken</li>
            </ol>
            <h6 class="slim-pagetitle">Asset Broken List</h6>
        </div><!-- slim-pageheader -->
        <div class="section-wrapper">
            <label class="section-title d-inline">Asset Broken List</label>

            <p class="mg-b-20 mg-sm-b-40">Searching, ordering and paging goodness will be immediately added to the table, as shown in this example.</p>
            <div class="table-wrapper">
                <div id="datatable1_wrapper" class="dataTables_wrapper no-footer">
                    @(Html.DevExtreme().DataGrid<AssetProject.Models.AssetBroken>()
    .DataSource(ds => ds.Mvc()
        .Controller("AssetBrokens")
        .LoadAction("Get")
        .Key("AssetBrokenId")
    )
    .RemoteOperations(true)
    .Columns(columns => {

        columns.AddFor(m => m.DateBroken);

        columns.AddFor(m => m.Notes);

                    columns.AddFor(m => m.Asset.Photo).Caption("Photo").Width(100)
                    .AllowFiltering(false)
                    .AllowSorting(false)
                    .CellTemplate(@<text>
                <div>
                    <img src="/<%- value %>" alt="" width="35" height="35" />
                </div>
            </text>);
                        columns.AddFor(m => m.Asset.AssetDescription).Caption("Description");

                        columns.AddFor(m => m.Asset.AssetTagId).Caption("TagId");

                        columns.AddFor(m => m.Asset.AssetCost).Caption("Cost");

                        columns.AddFor(m => m.Asset.AssetSerialNo).Caption("SerialNo");

                        columns.AddFor(m => m.Asset.AssetPurchaseDate).Caption("PurchaseDate");

                        columns.AddFor(m => m.Asset.ItemId).Caption("Item").Lookup(lookup => lookup
                        .DataSource(ds => ds.WebApi().Controller("Assets").LoadAction("ItemsLookup").Key("Value"))
                        .ValueExpr("Value")
                        .DisplayExpr("Text")
                        );


    })
)
                </div>
            </div><!-- table-wrapper -->
        </div><!-- section-wrapper -->

    </div><!-- container -->
</div>