@page
@model AssetProject.Areas.Admin.Pages.PatchProcess.PatchTansferModel
@{
}
@Html.AntiForgeryToken()
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
<div class="slim-mainpanel" style="position: relative;">
    <div class="container">
        <div class="slim-pageheader">
            <ol class="breadcrumb slim-breadcrumb">
                <li class="breadcrumb-item"><a href="#">@sharedResource["Home"]</a></li>
                <li class="breadcrumb-item active" aria-current="page">@sharedResource["Transfer"]</li>
            </ol>
            <h6 class="slim-pagetitle">@sharedResource["Transfer"]</h6>
        </div><!-- slim-pageheader -->

        <div class="row row-sm">
            <div class="col-lg-6 mg-t-20 mg-lg-t-0">
                <div class="section-wrapper">
                    <label class="section-title">@sharedResource["Check Out Information"]</label>
                    <div class="form-group">
                        <label>@sharedResource["Action Type"]: <span class="tx-danger">*</span></label>

                        @(Html.DevExtreme().Lookup()
                                        .ID("ToSideActionType")
                                        .DataSource(d => d.WebApi()
                                        .Controller("Lookups")
                                        .LoadAction("ActionTypesLookup")
                                        .Key("Value")
                                        )
                                        .OnSelectionChanged("ToSideActionTypeLookup")
                                        .ValueExpr("Value")
                                        .DisplayExpr("Text").Placeholder(sharedResource["Select Action Type"])
                                        .ShowClearButton(true)
                                        .ClearButtonText(sharedResource["Clear"])
                                        .CancelButtonText(sharedResource["Cancel"])
                                        .SearchPlaceholder(sharedResource["searching"])
                                        )
                    </div>
                    <div class="form-group" style="display:none" id="ToDepartmentFormID">
                        <label>@sharedResource["Department"] <span class="tx-danger">*</span></label>

                        @(Html.DevExtreme().Lookup()
                       .ID("ToDepartmentId")
                                        .DataSource(d => d.WebApi()
                                        .Controller("Lookups")
                                        .LoadAction("DepartmentsLookup")
                                        .Key("Value")
                                        )
                                        .ValueExpr("Value")
                                        .DisplayExpr("Text").Placeholder(sharedResource["Select Department"])

                                        .ShowClearButton(true)
                                        .ClearButtonText(sharedResource["Clear"])
                                        .CancelButtonText(sharedResource["Cancel"])
                                        .SearchPlaceholder(sharedResource["searching"])
                                         .OnSelectionChanged("GetToDeparmentAssets")

                                        )
                    </div>
                    <div class="form-group" style="display:none" id="ToEmployeeId">
                        <label>@sharedResource["Empolyee"]: <span class="tx-danger">*</span></label>

                        @(Html.DevExtreme().Lookup()
                        .ID("ToEmployeeId")
                                         .DataSource(d => d.WebApi()
                                        .Controller("Lookups")
                                        .LoadAction("EmpolyeesLookup")
                                        .Key("Value")
                                        )
                                        .ValueExpr("Value")
                                        .DisplayExpr("Text").Placeholder(sharedResource["Select Employee"])
                                        .ShowClearButton(true)
                                        .ClearButtonText(sharedResource["Clear"])
                                        .CancelButtonText(sharedResource["Cancel"])
                                        .SearchPlaceholder(sharedResource["searching"])
                                       .OnSelectionChanged("GetToEmployeeAssets")

                                        )
                    </div>
                    <div class="col-lg-7">
                        <div class="card card-table">
                            <div class="card-header">
                                <h6 class="slim-card-title">@sharedResource["Asset List"]</h6>
                                @*<p>Please search and select</p>*@
                            </div><!-- card-header -->
                            <div class="table-responsive">
                                <script>
    function grid_dataSource_beforeSend(op, ajax) {
        ajax.headers = {
            RequestVerificationToken: "@Xsrf.GetAndStoreTokens(Model.HttpContext).RequestToken"
        };
    }
                                </script>

                                @(Html.DevExtreme().DataGrid<AssetProject.Models.Asset>()
                     .ID("ToSideGrid")
                  .DataSource(ds => ds.RemoteController()
               .LoadUrl(Url.Page("PatchTransferFromDepartment", "GridData"))
                      .Key("AssetId")
                    .OnBeforeSend("grid_dataSource_beforeSend")

                  )
                  .Selection(s => s.Mode(SelectionMode.Multiple))
                          .OnSelectionChanged("selection_changed")

                    .HeaderFilter(headerFilter => headerFilter.Visible(true))

                    .ColumnAutoWidth(true)
                    
                    .WordWrapEnabled(true)
                     .ShowBorders(true)
    .Paging(p=>p.PageSize(10))
    .Pager(p=>p.ShowPageSizeSelector(true).AllowedPageSizes(new [] {10,20,40,80}))
    .SearchPanel(s=>s.Visible(true).HighlightCaseSensitive(true).Placeholder(sharedResource["searching"]))
    .FilterRow(filterRow => filterRow
        .Visible(true)
        .ApplyFilter(GridApplyFilterMode.Auto)
    )
      .HeaderFilter(headerFilter => headerFilter.Visible(true))

                    .Columns(columns => {
                    columns.AddFor(m => m.Photo).Width(100)
                    .AllowFiltering(false)
                    .AllowSorting(false)
                    .CellTemplate(@<text>
                            <div>
                                <img src="<%- '/'+value %>" alt="" width="35" height="35" />
                            </div>
                        </text>).Caption(sharedResource["Photo"]);

                    columns.AddFor(m => m.AssetTagId).Caption(sharedResource["Asset TagId"]);

                    columns.AddFor(m => m.AssetCost).Caption(sharedResource["AssetCost"]);

                    columns.AddFor(m => m.AssetSerialNo).Caption(sharedResource["AssetSerialNo"]);


                    })
                    .RemoteOperations(true)
                    )
                            </div><!-- table-responsive -->

                        </div>
                    </div>


                </div><!-- section-wrapper -->
            </div><!-- col-6 -->

            <div class="col-lg-6 mg-t-20 mg-lg-t-0">
                <div class="section-wrapper">
                    <label class="section-title">@sharedResource["Check Out Information"]</label>
                    <div class="form-group">
                        <label>@sharedResource["Action Type"]: <span class="tx-danger">*</span></label>

                        @(Html.DevExtreme().Lookup()
                                        .ID("ActionTypeLookup")
                                        .DataSource(d => d.WebApi()
                                        .Controller("Lookups")
                                        .LoadAction("ActionTypesLookup")
                                        .Key("Value")
                                        )
                                        .OnSelectionChanged("AcionTypeLookuP")
                                        .ValueExpr("Value")
                                        .DisplayExpr("Text").Placeholder(sharedResource["Select Action Type"])
                                        .ShowClearButton(true)
                                        .ClearButtonText(sharedResource["Clear"])
                                        .CancelButtonText(sharedResource["Cancel"])
                                        .SearchPlaceholder(sharedResource["searching"])
                                        )
                    </div>
                    <div class="form-group" style="display:none" id="DepartmentFormID">
                        <label>@sharedResource["Department"] <span class="tx-danger">*</span></label>

                        @(Html.DevExtreme().Lookup()
                       .ID("DepartmentId")
                                        .DataSource(d => d.WebApi()
                                        .Controller("Lookups")
                                        .LoadAction("DepartmentsLookup")
                                        .Key("Value")
                                        )
                                        .ValueExpr("Value")
                                        .DisplayExpr("Text").Placeholder(sharedResource["Select Department"])

                                        .ShowClearButton(true)
                                        .ClearButtonText(sharedResource["Clear"])
                                        .CancelButtonText(sharedResource["Cancel"])
                                        .SearchPlaceholder(sharedResource["searching"])
                                         .OnSelectionChanged("GetDeparmentAssets")

                                        )
                    </div>
                    <div class="form-group" style="display:none" id="FormEmployeeId">
                        <label>@sharedResource["Empolyee"]: <span class="tx-danger">*</span></label>

                        @(Html.DevExtreme().Lookup()
                        .ID("EmployeeId")
                                         .DataSource(d => d.WebApi()
                                        .Controller("Lookups")
                                        .LoadAction("EmpolyeesLookup")
                                        .Key("Value")
                                        )
                                        .ValueExpr("Value")
                                        .DisplayExpr("Text").Placeholder(sharedResource["Select Employee"])
                                        .ShowClearButton(true)
                                        .ClearButtonText(sharedResource["Clear"])
                                        .CancelButtonText(sharedResource["Cancel"])
                                        .SearchPlaceholder(sharedResource["searching"])
                                       .OnSelectionChanged("GetEmployeeAssets")

                                        )
                    </div>
                    <div class="col-lg-7">
                        <div class="card card-table">
                            <div class="card-header">
                                <h6 class="slim-card-title">@sharedResource["Asset List"]</h6>
                                @*<p>Please search and select</p>*@
                            </div><!-- card-header -->
                            <div class="table-responsive">
                                <script>
    function grid_dataSource_beforeSend(op, ajax) {
        ajax.headers = {
            RequestVerificationToken: "@Xsrf.GetAndStoreTokens(Model.HttpContext).RequestToken"
        };
    }
                                </script>
                                @(Html.DevExtreme().DataGrid<AssetProject.Models.Asset>()
                     .ID("FromSideGrid")
                  .DataSource(ds => ds.RemoteController()
               .LoadUrl(Url.Page("PatchTransferFromDepartment", "GridData"))
                      .Key("AssetId")
                    .OnBeforeSend("grid_dataSource_beforeSend")

                  )
                  .Selection(s => s.Mode(SelectionMode.Multiple))
                          .OnSelectionChanged("selection_changed")

                    .HeaderFilter(headerFilter => headerFilter.Visible(true))

                    .ColumnAutoWidth(true)
                    .WordWrapEnabled(true)
                     .ShowBorders(true)
    .Paging(p=>p.PageSize(10))
    .Pager(p=>p.ShowPageSizeSelector(true).AllowedPageSizes(new [] {10,20,40,80}))
    .SearchPanel(s=>s.Visible(true).HighlightCaseSensitive(true).Placeholder(sharedResource["searching"]))
    .FilterRow(filterRow => filterRow
        .Visible(true)
        .ApplyFilter(GridApplyFilterMode.Auto)
    )
      .HeaderFilter(headerFilter => headerFilter.Visible(true))

                    .Columns(columns => {
                    columns.AddFor(m => m.Photo).Width(100)
                    .AllowFiltering(false)
                    .AllowSorting(false)
                    .CellTemplate(@<text>
                            <div>
                                <img src="<%- '/'+value %>" alt="" width="35" height="35" />
                            </div>
                        </text>).Caption(sharedResource["Photo"]);

                    columns.AddFor(m => m.AssetTagId).Caption(sharedResource["Asset TagId"]);

                    columns.AddFor(m => m.AssetCost).Caption(sharedResource["AssetCost"]);

                    columns.AddFor(m => m.AssetSerialNo).Caption(sharedResource["AssetSerialNo"]);


                    })
                    .RemoteOperations(true)
                    )
                            </div><!-- table-responsive -->

                        </div>
                    </div>


                </div><!-- section-wrapper -->
            </div><!-- col-6 -->
        </div>
    </div>
</div>

<script>
    //window.addEventListener('DOMContentLoaded', (event) => {
    //    if (localStorage.getItem("lang") != "") {

    //        if (localStorage.getItem("lang") == "ar") {
    //            console.log("In Page")
    //            dataGrid = $("#grid-container").dxDataGrid("instance");
    //            drobdownBox = $("#locationTree").dxDropDownBox("instance");
    //            dataGrid.option("rtlEnabled", true);
    //            drobdownBox.option("rtlEnabled", true);
    //        }
    //    }
    //});

   

    function getDataGridInstance() {
        return $("#grid-container").dxDataGrid("instance");
    }

    function selection_changed(selectedItems) {
        var dataGrid = getDataGridInstance();
        var data = selectedItems.selectedRowsData;
        console.log(data)
        console.log(data.length)

        console.log(typeof data)
        const myJSON = JSON.stringify(data)
        console.log(myJSON)
        console.log(myJSON.length)

        console.log(typeof myJSON)
        if (data.length > 0) {
            $.ajax({
                type: "POST",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                }
                ,
                url: "/admin/PatchProcess/PatchTransferFromDepartment?handler=FillAssetList",
                async: false,
                data: JSON.stringify(data),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    console.log("get selected rows successfully" + response)

                },
                failure: function (response) {
                    alert(response);
                }
            });

        }
        else {
            console.log("Nobody has been selected")
            //$("#selectedItemsContainer").text("Nobody has been selected");
        }

    }


    function GetToDeparmentAssets() {
        var Departmnt = $("#ToDepartmentId").dxLookup("instance");
        console.log(Departmnt)
        var DepartmntValue = Departmnt.option("selectedItem");
        console.log(DepartmntValue)
        if (DepartmntValue != null) {
            console.log(DepartmntValue.Value)
            $.ajax({
                type: "GET",
                url: "/admin/PatchProcess/PatchTansfer?handler=AssetsForDepartment",
                data: { "values": DepartmntValue.Value },
                contentType: "application/json",
                dataType: "json",
                success: function (response) {
                    console.log("get Employee successfully" + response)
                    // $("#grid-container").dxDataGrid("instance").refresh()
                    $("#ToSideGrid").dxDataGrid("instance").option("dataSource", response)
                    console.log($("#ToSideGrid").dxDataGrid("instance"))

                },
                failure: function (response) {
                    alert(response);
                }
            });

        }
    }

    function GetToEmployeeAssets() {
        var Employee = $("#ToEmployeeId").dxLookup("instance");
        console.log(Employee)
        var EmployeeValue = Employee.option("selectedItem");
        console.log(EmployeeValue)
        if (EmployeeValue != null) {
            console.log(EmployeeValue.Value)
            $.ajax({
                type: "GET",
                url: "/admin/PatchProcess/PatchTansfer?handler=AssetsForEmpolyee",
                data: { "values": EmployeeValue.Value },
                contentType: "application/json",
                dataType: "json",
                success: function (response) {
                    console.log("get Employee successfully" + response)
                    // $("#grid-container").dxDataGrid("instance").refresh()
                    $("#ToSideGrid").dxDataGrid("instance").option("dataSource", response)
                    console.log($("#ToSideGrid").dxDataGrid("instance"))

                },
                failure: function (response) {
                    alert(response);
                }
            });

        }
    }




    function GetEmployeeAssets() {
        var Employee = $("#EmployeeId").dxLookup("instance");
        console.log(Employee)
        var EmployeeValue = Employee.option("selectedItem");
        console.log(EmployeeValue)
        if (EmployeeValue != null) {
            console.log(EmployeeValue.Value)
            $.ajax({
                type: "GET",
                url: "/admin/PatchProcess/PatchTansfer?handler=AssetsForEmpolyee",
                data: { "values": EmployeeValue.Value },
                contentType: "application/json",
                dataType: "json",
                success: function (response) {
                    console.log("get Employee successfully" + response)
                    // $("#grid-container").dxDataGrid("instance").refresh()
                    $("#FromSideGrid").dxDataGrid("instance").option("dataSource", response)
                    console.log($("#FromSideGrid").dxDataGrid("instance"))

                },
                failure: function (response) {
                    alert(response);
                }
            });

        }
    }

    function GetDeparmentAssets() {
        var Departmnt = $("#DepartmentId").dxLookup("instance");
        console.log(Departmnt)
        var DepartmntValue = Departmnt.option("selectedItem");
        console.log(DepartmntValue)
        if (DepartmntValue != null) {
            console.log(DepartmntValue.Value)
            $.ajax({
                type: "GET",
                url: "/admin/PatchProcess/PatchTansfer?handler=AssetsForDepartment",
                data: { "values": DepartmntValue.Value },
                contentType: "application/json",
                dataType: "json",
                success: function (response) {
                    console.log("get Employee successfully" + response)
                    // $("#grid-container").dxDataGrid("instance").refresh()
                    $("#FromSideGrid").dxDataGrid("instance").option("dataSource", response)
                    console.log($("#FromSideGrid").dxDataGrid("instance"))

                },
                failure: function (response) {
                    alert(response);
                }
            });

        }

    }



        
        function AcionTypeLookuP() {
            console.log("inside the funcion")
            var ActionType = $("#ActionTypeLookup").dxLookup("instance");
            console.log(ActionType)
            var ActionTypeValue = ActionType.option("selectedItem");
            console.log(ActionTypeValue)
            if (ActionTypeValue.Value == 1) {
                console.log("In TO Empolyee ")
                document.getElementById("DepartmentFormID").style.display = 'none'
                document.getElementById("FormEmployeeId").style.display = 'block'
            }
            else if (ActionTypeValue.Value == 2) {
                console.log("In TO Department ")
                document.getElementById("DepartmentFormID").style.display = 'block'
                document.getElementById("FormEmployeeId").style.display = 'none'
            }
        }

        function ToSideActionTypeLookup() {
            console.log("inside the funcion")
            var ActionType = $("#ToSideActionType").dxLookup("instance");
            console.log(ActionType)
            var ActionTypeValue = ActionType.option("selectedItem");
            console.log(ActionTypeValue)
            if (ActionTypeValue.Value == 1) {
                console.log("In TO Empolyee ")
                document.getElementById("ToDepartmentFormID").style.display = 'none'
                document.getElementById("ToEmployeeId").style.display = 'block'
            }
            else if (ActionTypeValue.Value == 2) {
                console.log("In TO Department ")
                document.getElementById("ToDepartmentFormID").style.display = 'block'
                document.getElementById("ToEmployeeId").style.display = 'none'
            }
        }
        


</script>