@page
@*@model AssetProject.Areas.Admin.Pages.PatchProcess.PatchCheckOutModel*@
@{
}
@model AssetProject.Models.AssetMovement

<div class="slim-mainpanel" style="position: relative;">
    <div class="container">
        <div class="slim-pageheader">
            <ol class="breadcrumb slim-breadcrumb">
                <li class="breadcrumb-item"><a href="#">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page">Check-Out</li>
            </ol>
            <h6 class="slim-pagetitle">Check-Out</h6>
        </div><!-- slim-pageheader -->

        <div class="row row-sm">
            <div class="col-lg-7">
                <div class="card card-table">
                    <div class="card-header">
                        <h6 class="slim-card-title">Asset List</h6>
                        @*<p>Please search and select</p>*@
                    </div><!-- card-header -->
                    <div class="table-responsive">
                          @(Html.DevExtreme().DataGrid<AssetProject.Models.Asset>()
                     .ID("gridContainer")
                    .DataSource(ds => ds.Mvc()
                    .Controller("Assets")
                    .LoadAction("Get")
                   .InsertAction("Post")
                    .UpdateAction("Put")
                   .DeleteAction("Delete")
                    .Key("AssetId")
                    )
                         .Selection(s => s.Mode(SelectionMode.Multiple))
                    .HeaderFilter(headerFilter => headerFilter.Visible(true))
                    @*.Selection(s => s
                    .Mode(SelectionMode.Multiple)
                    )*@
                    @*.ColumnChooser(cc => cc.Enabled(true))*@
                    .ColumnAutoWidth(true)
                    .WordWrapEnabled(true)
                     .ShowBorders(true)
    .Paging(p=>p.PageSize(10))
    .Pager(p=>p.ShowPageSizeSelector(true).AllowedPageSizes(new [] {10,20,40,80}))
    .SearchPanel(s=>s.Visible(true).HighlightCaseSensitive(true))
    .FilterRow(filterRow => filterRow
        .Visible(true)
        .ApplyFilter(GridApplyFilterMode.Auto)
    )
      .HeaderFilter(headerFilter => headerFilter.Visible(true))

                    .Columns(columns => {


                    columns.AddFor(m => m.Photo).Width(100)
                    .AllowFiltering(false)
                    .AllowSorting(false)
                    .CellTemplate(@<text>
                            <div>
                                <img src="<%- value %>" alt="" width="35" height="35" />
                            </div>
                        </text>).Caption(sharedResource["Photo"]);
                    columns.AddFor(m => m.AssetDescription).Caption(sharedResource["Asset Description"]);

                    columns.AddFor(m => m.AssetTagId).Caption(sharedResource["AssetTagId"]);

                    columns.AddFor(m => m.AssetCost).Caption(sharedResource["AssetCost"]);

                    columns.AddFor(m => m.AssetSerialNo).Caption(sharedResource["AssetSerialNo"]);

                    columns.AddFor(m => m.AssetPurchaseDate).Caption(sharedResource["AssetPurchaseDate"]);

                    columns.AddFor(m => m.ItemId).Caption("Item").Lookup(lookup => lookup
                    .DataSource(ds => ds.WebApi().Controller("Assets").LoadAction("ItemsLookup").Key("Value"))
                    .ValueExpr("Value")
                    .DisplayExpr("Text")
                    ).Caption(sharedResource["Item"]);




                    })
                    .RemoteOperations(true).Columns(columns =>
                    {
                    columns.Add().Width(160).Alignment(HorizontalAlignment.Center)
                    .CellTemplate(@<text>
                            @Html.DevExtreme().Button().Text(sharedResource["Edit"]).OnClick("function (e) { editButtonClick(data) }")
                            @Html.DevExtreme().Button().Text(sharedResource["Delete"]).OnClick("function (e) { deleteButtonClick(data) }")
                            @Html.DevExtreme().Button().Text(sharedResource["View"]).OnClick("function (e) { viewButtonClick(data) }")
                        </text>);

                    })

                    )
                    </div><!-- table-responsive -->
                
                </div>
            </div>



            <div class="col-lg-5 mg-t-20 mg-lg-t-0">
                <div class="section-wrapper">
                    <label class="section-title">Check-Out Information</label>
                    @*<p class="mg-b-20 mg-sm-b-40">Please fill below check-out information.</p>*@
                    <div class="form-layout form-layout-5">
                        <form asp-area="Admin" asp-page="/AssetManagment/AssetProfile" asp-page-handler="AddAssetCheckOut" enctype="multipart/form-data">

                            <div class="row mg-b-25">
                                <div class="col-lg-12">
                                    <div class="form-group">
                                        <label class="form-control-label">@sharedResource["Transaction Date"]: <span class="tx-danger">*</span></label>
                                        <input asp-for="@Model.TransactionDate" type="date" class="form-control date" value=" ">
                                        <span asp-validation-for="@Model.TransactionDate" class="text-danger"></span>
                                    </div>
                                </div><!-- col-4 -->

                                <div class="col-lg-12">
                                    <div class="form-group">
                                        <label class="form-control-label">@sharedResource["Action Type"]: <span class="tx-danger">*</span></label>

                                        @(Html.DevExtreme().LookupFor(c=>c.ActionTypeId)
                                        .ID("ActionTypeLookup")
                                        .DataSource(d => d.WebApi()
                                        .Controller("Lookups")
                                        .LoadAction("ActionTypesLookup")
                                        .Key("Value")
                                        )
                                        .OnSelectionChanged("AcionTypeLookuP")
                                        .ValueExpr("Value")
                                        .DisplayExpr("Text")
                                        )
                                        <span asp-validation-for="@Model.ActionTypeId" class="text-danger"></span>
                                    </div>
                                </div>



                                <div class="col-lg-12" id="AssetToEmpolyee" style="display:none">
                                    <div class="form-group">
                                        <label class="form-control-label">@sharedResource["Empolyee"]: <span class="tx-danger">*</span></label>

                                        @(Html.DevExtreme().LookupFor(c=>c.EmpolyeeID)
                                        .DataSource(d => d.WebApi()
                                        .Controller("Lookups")
                                        .LoadAction("EmpolyeesLookup")
                                        .Key("Value")
                                        )
                                        .ValueExpr("Value")
                                        .DisplayExpr("Text")
                                        )
                                        <span asp-validation-for="@Model.EmpolyeeID" class="text-danger"></span>
                                    </div>
                                </div>


                                <div class="col-lg-12" id="AssetToLocation" style="display:none">
                                    <div class="form-group">
                                        <label class="form-control-label">@sharedResource["Location"]: <span class="tx-danger">*</span></label>

                                        @*  @(Html.DevExtreme().LookupFor(c=>c.LocationId)
                                            .DataSource(d => d.WebApi()
                                            .Controller("Lookups")
                                            .LoadAction("LocationsLookup")
                                            .Key("Value")
                                            )
                                            .ValueExpr("Value")
                                            .DisplayExpr("Text")

                                            )*@
                                        @(Html.DevExtreme().DropDownBoxFor(c=>c.LocationId)
                                        .ValueExpr("Value")
                                        .DisplayExpr("Text")
                                        .DropDownOptions(o => o.Height(350))
                                        .DataSource(d => d.WebApi()
                                        .Controller("Lookups")
                                        .LoadAction("LocationsLookup")
                                        .LoadMode(DataSourceLoadMode.Raw)
                                        .Key("Value")
                                        )
                                        .Placeholder("Select a value...")
                                        .ShowClearButton(true)
                                        .OnValueChanged("treeBox_valueChanged")
                                        .ContentTemplate(new TemplateName("EmbeddedTreeViewSingle"))
                                        )
                                        <span asp-validation-for="@Model.LocationId" class="text-danger"></span>
                                    </div>
                                </div>
                                @using (Html.DevExtreme().NamedTemplate("EmbeddedTreeViewSingle"))
                                {
                                    @(Html.DevExtreme().TreeView()
                                .DataSource(ds => ds.Mvc()
                                .Controller("Locations")
                                .LoadAction("Get")
                                .Key("LocationId")
                                )
                                .DisplayExpr("LocationTitle")
                                .ItemsExpr("Items")
                                .ExpandedExpr("Expanded")
                                .KeyExpr("LocationId")
                                .ParentIdExpr("LocationParentId")
                                .DataStructure(TreeViewDataStructure.Plain)
                                .SelectionMode(NavSelectionMode.Single)
                                .SelectByClick(true)
                                .Height(235)
                                .OnItemClick(@<text>
                                        function(args) {
                                        component.close();
                                        }
                                    </text>)
                                .OnItemSelectionChanged(@<text>
                                        function(args) {
                                        component.option("value", args.component.getSelectedNodeKeys());
                                        }
                                    </text>)
                                .OnContentReady(@<text>
                                        function(args) {
                                        syncTreeViewSelection(args.component, component.option("value"));
                                        }
                                    </text>)
                                )
                                }

                                <div class="col-lg-12" id="AssetToDepartment" style="display:none">
                                    <div class="form-group">
                                        <label class="form-control-label">@sharedResource["Department"] <span class="tx-danger">*</span></label>

                                        @(Html.DevExtreme().LookupFor(c=>c.DepartmentId)
                                        .DataSource(d => d.WebApi()
                                        .Controller("Lookups")
                                        .LoadAction("DepartmentsLookup")
                                        .Key("Value")
                                        )
                                        .ValueExpr("Value")
                                        .DisplayExpr("Text")
                                        )
                                        <span asp-validation-for="@Model.DepartmentId" class="text-danger"></span>
                                    </div>
                                </div>



                                <div class="col-lg-12">
                                    <div class="form-group">
                                        <label class="form-control-label">@sharedResource["Remarks"] <span class="tx-danger">*</span></label>
                                        <textarea asp-for="@Model.Remarks" class="form-control" placeholder=""></textarea>
                                        <span asp-validation-for="@Model.Remarks" class="text-danger"></span>
                                    </div>
                                </div><!-- col-4 -->

                                <input name="AssetId" hidden id="checkoutAssetIdField" />
                            </div><!-- row -->

                            <div class="row mg-t-30">
                                <div class="col-sm-8 mg-l-auto">
                                    <div class="form-layout-footer">
                                        <button type="submit" class="btn btn-primary">@sharedResource["Check Out"]</button>
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">@sharedResource["Cancel"]</button>
                                    </div><!-- form-layout-footer -->
                                </div><!-- col-8 -->
                            </div>


                        </form>
                    </div><!-- form-layout -->
                </div><!-- section-wrapper -->
            </div><!-- col-6 -->
        </div>
    </div>

    <script>
        function AcionTypeLookuP(){
            console.log("inside the funcion")
            var ActionType = $("#ActionTypeLookup").dxLookup("instance");
             console.log(ActionType)
           var ActionTypeValue = ActionType.option("selectedItem");
           console.log(ActionTypeValue)
               if( ActionTypeValue.Value==1)
               {
                   console.log("In TO Empolyee ")
                    document.getElementById("AssetToEmpolyee").style.display='block'
                     document.getElementById("AssetToLocation").style.display='block'
                     document.getElementById("AssetToDepartment").style.display='block'
               }
               else if (ActionTypeValue.Value==2){
                     console.log("In TO Department ")
                      document.getElementById("AssetToDepartment").style.display='block'
                      document.getElementById("AssetToEmpolyee").style.display='none'
                     document.getElementById("AssetToLocation").style.display='block'
               }
           }

              function syncTreeViewSelection(treeView, value) {
                  console.log(treeView)
                  console.log(value)
               if (!value) {
                   treeView.unselectAll();
               } else {
                   treeView.selectItem(value);
               }
           }

           function treeBox_valueChanged(e) {
               console.log("tree")
               var $treeView = e.component.content().find(".dx-treeview");
               console.log($treeView)
               if($treeView.length) {
                   syncTreeViewSelection($treeView.dxTreeView("instance"), e.value);
               }
           }

    </script>
