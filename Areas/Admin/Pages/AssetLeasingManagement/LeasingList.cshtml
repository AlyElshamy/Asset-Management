@page
@model AssetProject.Areas.Admin.Pages.AssetLeasingManagement.LeasingListModel
@{
}
<div class="slim-mainpanel">
    <div class="container">
        <div class="slim-pageheader">
            <ol class="breadcrumb slim-breadcrumb">
                <li class="breadcrumb-item"><a href="#">@sharedResource["Home"]</a></li>
                <li class="breadcrumb-item"><a href="#">@sharedResource["Asset Management"]</a></li>
                <li class="breadcrumb-item active" aria-current="page">@sharedResource["Leasing List"]</li>
            </ol>
            <h6 class="slim-pagetitle">@sharedResource["Leasing List"]</h6>
        </div><!-- slim-pageheader -->
        <div class="section-wrapper">
            @*<a asp-area="Admin" asp-page="/ContractManagment/AddContract" class="btn btn-primary" style="float:right"> @sharedResource["Create Contract"]</a>*@
            <p class="mg-b-20 mg-sm-b-40"> @sharedResource["Search"].</p>
            <div class="table-wrapper">
                <div id="datatable1_wrapper" class="dataTables_wrapper no-footer">

                    @(Html.DevExtreme().DataGrid<AssetProject.Models.AssetLeasingDetails>()
                    .DataSource(ds => ds.Mvc()
                    .Controller("AssetLeasings")
                    .LoadAction("Get")
                    .Key("AssetLeasingId")
                    )

                    .ColumnChooser(cc => cc.Enabled(true))
                    .ColumnAutoWidth(true)
                    .WordWrapEnabled(true)
                     .ShowBorders(true)
                    .RemoteOperations(true)
                    .ShowBorders(true)
                    .Paging(p=>p.PageSize(10))
                    .Pager(p=>p.ShowPageSizeSelector(true).AllowedPageSizes(new [] {10,20,40,80}))
                    .SearchPanel(s=>s.Visible(true).HighlightCaseSensitive(true))
                    .FilterRow(filterRow => filterRow
                    .Visible(true)
                    .ApplyFilter(GridApplyFilterMode.Auto)
                    )
                    @*.HeaderFilter(headerFilter => headerFilter.Visible(true))
                    .Columns(columns => {

                    columns.Add().Caption(@sharedResource["Actions"]).Alignment(HorizontalAlignment.Center).CellTemplate(@<text>
                            <a href="/Admin/ContractManagment/EditContract?id=<%- data.ContractId %>"> @sharedResource["Edit"] |  </a>
                            <a href="/Admin/ContractManagment/DeleteContract?id=<%- data.ContractId %>"> @sharedResource["Delete"] | </a>
                            <a href="/Admin/ContractManagment/DetailsContract?id=<%- data.ContractId %>">@sharedResource["Details"]  </a>
                        </text>).Width(150);
                    })*@

                    .Columns(columns => {

                        

                        columns.AddFor(m => m.AssetLeasing.StartDate).Caption(sharedResource["Leasing StartDate"]);

                        columns.AddFor(m => m.AssetLeasing.EndDate).Caption(sharedResource["Leasing EndtDate"]);
                        columns.AddFor(m => m.AssetLeasing.Customer.FullName).Caption(sharedResource["Cusromer Name"]);
                        columns.AddFor(m => m.AssetLeasing.Customer.Phone).Caption(sharedResource["Cusromer Phone"]);
                        columns.AddFor(m => m.Asset.Photo).Caption("Photo").Width(100)
                    .AllowFiltering(false)
                    .AllowSorting(false)
                    .CellTemplate(@<text>
                <div>
                    <img src="/<%- value %>" alt="" width="35" height="35" />
                </div>
            </text>);
                        columns.AddFor(m => m.Asset.AssetDescription).Caption("Description");

                        columns.AddFor(m => m.Asset.AssetTagId).Caption("TagId");

                        columns.AddFor(m => m.Asset.AssetCost).Caption("Cost");

                        columns.AddFor(m => m.Asset.AssetSerialNo).Caption("SerialNo");

                        columns.AddFor(m => m.Asset.AssetPurchaseDate).Caption("PurchaseDate");

                        columns.AddFor(m => m.Asset.ItemId).Caption("Item").Lookup(lookup => lookup
                        .DataSource(ds => ds.WebApi().Controller("Assets").LoadAction("ItemsLookup").Key("Value"))
                        .ValueExpr("Value")
                        .DisplayExpr("Text")
                        );


                        //columns.AddFor(m => m.AssetId).Caption("Asset").Lookup(lookup => lookup
                        //.DataSource(ds => ds.WebApi().Controller("Lookups").LoadAction("VendorsLookup").Key("Value"))
                        //.ValueExpr("Value")
                        //.DisplayExpr("Text")
                        //);
                    })
                    )

                </div>
            </div><!-- table-wrapper -->
        </div><!-- section-wrapper -->

    </div><!-- container -->
</div>